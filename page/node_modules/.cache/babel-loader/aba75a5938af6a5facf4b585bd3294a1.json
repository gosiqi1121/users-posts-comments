{"ast":null,"code":"var _jsxFileName = \"/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  _s();\n\n  const {\n    userInfo\n  } = props;\n  const [comments, setComments] = useState([]);\n\n  const findAllCommentsOfThisPost = currPost => fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost === null || currPost === void 0 ? void 0 : currPost.id}`).then(res => res.json()).then(c => setComments(c));\n\n  useEffect(() => findAllCommentsOfThisPost(props === null || props === void 0 ? void 0 : props.post), []);\n  const [newComment, setNewComment] = useState('');\n\n  const commentClickHandler = currPost => {\n    var _props$post;\n\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${props === null || props === void 0 ? void 0 : (_props$post = props.post) === null || _props$post === void 0 ? void 0 : _props$post.id}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        postId: props === null || props === void 0 ? void 0 : props.post.id,\n        name: userInfo.name,\n        email: userInfo.email,\n        body: newComment\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => setComments([json, ...comments]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group rounded mt-3 text-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"form-control rounded \",\n        placeholder: \"type your comment here...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary\",\n        onClick: commentClickHandler,\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fw-bold\",\n          children: [comment.name, \"  - \", comment.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), comment.body]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"gR37wp8iliPU02wtoFHJBIlT6n8=\");\n\n_c = Comment;\n\nconst UserPost = () => {\n  _s2();\n\n  const params = useParams();\n  const [posts, setPosts] = useState({});\n\n  const findAllPosts = () => fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json()).then(p => setPosts(p));\n\n  useEffect(findAllPosts, []);\n  const [userDetails, setUserDetails] = useState({\n    'id': 1\n  });\n\n  const findUserById = () => fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`).then(res => res.json()).then(userDetails => setUserDetails(userDetails));\n\n  useEffect(findUserById, []);\n  const postsByThisUser = Object.values(posts).filter(p => p.userId === parseInt(params.id));\n  const [newPost, setNewPost] = useState('');\n\n  const postClickHandler = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: newPost,\n        userId: parseInt(params.id)\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => setPosts([json, ...posts]));\n  };\n\n  const deletePostClickHandler = item => {\n    console.log(item.id);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(_post => {\n      setPosts(posts.filter(i => i.id !== item.id));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"User Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control rounded\",\n            placeholder: \"Search\",\n            \"aria-label\": \"Search\",\n            \"aria-describedby\": \"search-addon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text border-0\",\n            id: \"search-addon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control rounded \",\n            placeholder: \"New Post...\",\n            value: newPost,\n            onChange: e => setNewPost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-dark\",\n            onClick: postClickHandler,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: postsByThisUser.map(post => /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fw-bold\",\n                        children: post.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        onClick: () => deletePostClickHandler(post),\n                        className: \"fas fa-times fa-pull-right\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [post.body, /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-outline-dark fa-pull-right\",\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Comment, {\n                      post: post,\n                      userInfo: userDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(UserPost, \"4jjTZ0PiVOI4z42HgGvDWYfrG8s=\", false, function () {\n  return [useParams];\n});\n\n_c2 = UserPost;\nexport default UserPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"UserPost\");","map":{"version":3,"sources":["/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js"],"names":["useEffect","useState","Link","useParams","Comment","props","userInfo","comments","setComments","findAllCommentsOfThisPost","currPost","fetch","id","then","res","json","c","post","newComment","setNewComment","commentClickHandler","method","body","JSON","stringify","postId","name","email","headers","response","e","target","value","map","comment","UserPost","params","posts","setPosts","findAllPosts","p","userDetails","setUserDetails","findUserById","postsByThisUser","Object","values","filter","userId","parseInt","newPost","setNewPost","postClickHandler","title","deletePostClickHandler","item","console","log","_post","i","marginBottom","width"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\nconst Comment = (props) => {\n    const { userInfo } = props\n    const [comments, setComments] = useState([])\n    const findAllCommentsOfThisPost = (currPost) =>\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost?.id}`)\n            .then(res => res.json())\n            .then(c => setComments(c))\n    useEffect(() => findAllCommentsOfThisPost(props?.post), [])\n\n    const [newComment, setNewComment] = useState('')\n    const commentClickHandler = (currPost) => {\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${props?.post?.id}`, {\n            method: 'POST',\n            body: JSON.stringify({\n                postId: props?.post.id,\n                name: userInfo.name,\n                email: userInfo.email,\n                body: newComment,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setComments([json, ...comments])\n            )\n    }\n\n    return (\n        <div >\n            <div className=\"input-group rounded mt-3 text-primary\">\n                <textarea type=\"text\" className=\"form-control rounded \"\n                          placeholder=\"type your comment here...\"\n                          value={newComment}\n                          onChange={(e) => setNewComment(e.target.value)}>\n                </textarea>\n                <button className=\"btn btn-outline-primary\"\n                        onClick={commentClickHandler}>comment\n                </button>\n            </div>\n\n            <ul className=\"list-group\">\n                {\n                    comments.map(comment =>\n                        <li className=\"list-group-item\" key={comment.id}>\n                            <p className=\"fw-bold\">{comment.name}  - {comment.email}</p>\n                            {comment.body}\n                        </li>)\n                }\n            </ul>\n\n        </div>\n    )\n}\nconst UserPost = () => {\n    const params = useParams()\n    const [posts, setPosts] = useState({})\n    const findAllPosts = () =>\n        fetch(`https://jsonplaceholder.typicode.com/posts`)\n            .then(res => res.json())\n            .then(p => setPosts(p))\n    useEffect(findAllPosts, [])\n\n    const [userDetails, setUserDetails] = useState({ 'id': 1 })\n    const findUserById = () =>\n        fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`)\n            .then(res => res.json())\n            .then(userDetails => setUserDetails(userDetails))\n    useEffect(findUserById, [])\n    const postsByThisUser = Object.values(posts).filter(p => p.userId === parseInt(params.id))\n\n    const [newPost, setNewPost] = useState('')\n\n    const postClickHandler = () => {\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: JSON.stringify({\n                title: 'foo',\n                body: newPost,\n                userId: parseInt(params.id),\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setPosts([json, ...posts])\n            )\n    }\n\n    const deletePostClickHandler = (item) => {\n        console.log(item.id)\n        fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n            method: 'DELETE',\n        })\n            .then(response => response.json())\n            .then(_post => {\n                setPosts(posts.filter(i => i.id !== item.id))\n            })\n\n    }\n\n    return (\n        <>\n            <details className=\"w-100\">\n                <summary>User Post</summary>\n                <div>\n                    {/*expand to show search bar, create comment button and post new comments*/}\n                    <div className=\"input-group rounded\">\n                        <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\"\n                               aria-label=\"Search\" aria-describedby=\"search-addon\"/>\n                        <span className=\"input-group-text border-0\" id=\"search-addon\">\n                                    <i className=\"fas fa-search\"></i>\n                                  </span>\n                    </div>\n\n\n                    <div className=\"input-group rounded mt-3\">\n                                <textarea type=\"text\" className=\"form-control rounded \"\n                                          placeholder=\"New Post...\"\n                                          value={newPost}\n                                          onChange={(e) => setNewPost(e.target.value)}>\n\n                                </textarea>\n\n                        <button className=\"btn btn-outline-dark\"\n                                onClick={postClickHandler}>Post\n                        </button>\n\n                    </div>\n                    <hr/>\n\n                    <div className=\"rounded mt-3\">\n                        <ul className=\"list-group\">\n                            {\n                                postsByThisUser.map(post =>\n                                    <table style={{ marginBottom: '16px' }} key={post.id}>\n                                        <tbody>\n                                            <tr>\n                                                <td style={{ width: '100%' }}>\n                                                    <div>\n                                                        <span className=\"fw-bold\">{post.title}</span>\n                                                        <i onClick={() => deletePostClickHandler(post)}\n                                                           className=\"fas fa-times fa-pull-right\"></i>\n                                                    </div>\n                                                    <div>{post.body}\n\n                                                        <button className=\"btn btn-outline-dark fa-pull-right\">\n                                                            Edit\n                                                        </button>\n\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <Comment post={post} userInfo={userDetails}/>\n\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                )\n                            }\n\n                        </ul>\n                    </div>\n                </div>\n            </details>\n\n        </>\n    )\n}\n\nexport default UserPost"]},"metadata":{},"sourceType":"module"}