{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhotoScreen = () => {\n  _s();\n\n  const params = useParams();\n  const [photo, setPhoto] = useState([]);\n\n  const findAllPhotos = () => fetch('https://jsonplaceholder.typicode.com/photos').then(res => res.json()).then(photo => setPhoto(photo));\n\n  useEffect(findAllPhotos, []);\n  const photoFromOneAlbum = Object.values(photo).filter(p => p.albumId === params);\n  console.log(photoFromOneAlbum);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(PhotoScreen, \"b7C0BTugFjMlXEfXW5KDBU8Nrgc=\", false, function () {\n  return [useParams];\n});\n\n_c = PhotoScreen;\nexport default PhotoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoScreen\");","map":{"version":3,"sources":["/Users/sunarke/Desktop/pagination/page/src/User/PhotoScreen.js"],"names":["useEffect","useState","useParams","PhotoScreen","params","photo","setPhoto","findAllPhotos","fetch","then","res","json","photoFromOneAlbum","Object","values","filter","p","albumId","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMM,aAAa,GAAG,MAClBC,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUJ,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAF3B,CADJ;;AAIAL,EAAAA,SAAS,CAACO,aAAD,EAAgB,EAAhB,CAAT;AACA,QAAMK,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcT,KAAd,EAAqBU,MAArB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcb,MAA/C,CAA1B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;AACA,sBACI,qCADJ;AAKH,CAfD;;GAAMT,W;UACaD,S;;;KADbC,W;AAgBN,eAAgBA,WAAhB","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst PhotoScreen = () => {\n    const params = useParams()\n    const [photo, setPhoto] = useState([]);\n    const findAllPhotos = () =>\n        fetch('https://jsonplaceholder.typicode.com/photos')\n            .then(res => res.json())\n            .then(photo => setPhoto(photo))\n    useEffect(findAllPhotos, []);\n    const photoFromOneAlbum = Object.values(photo).filter(p => p.albumId === params);\n    console.log(photoFromOneAlbum);\n    return (\n        <>\n        </>\n    )\n\n}\nexport default  PhotoScreen;"]},"metadata":{},"sourceType":"module"}