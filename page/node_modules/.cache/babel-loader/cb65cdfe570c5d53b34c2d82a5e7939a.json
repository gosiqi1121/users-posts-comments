{"ast":null,"code":"var _jsxFileName = \"/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  _s();\n\n  const {\n    userInfo\n  } = props;\n  const [comments, setComments] = useState([]);\n\n  const findAllCommentsOfThisPost = currPost => fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost === null || currPost === void 0 ? void 0 : currPost.id}`).then(res => res.json()).then(c => setComments(c));\n\n  useEffect(() => findAllCommentsOfThisPost(props === null || props === void 0 ? void 0 : props.post), []);\n  const [newComment, setNewComment] = useState('');\n\n  const commentClickHandler = currPost => {\n    var _props$post;\n\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${props === null || props === void 0 ? void 0 : (_props$post = props.post) === null || _props$post === void 0 ? void 0 : _props$post.id}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        postId: props === null || props === void 0 ? void 0 : props.post.id,\n        name: userInfo.name,\n        email: userInfo.email,\n        body: newComment\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => setComments([json, ...comments]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-primary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group rounded mt-3 text-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"form-control rounded \",\n        placeholder: \"type your comment here...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary\",\n        onClick: commentClickHandler,\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fw-bold\",\n          children: [comment.name, \" - \", comment.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), comment.body]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"gR37wp8iliPU02wtoFHJBIlT6n8=\");\n\n_c = Comment;\n\nconst UpdatePost = props => {\n  _s2();\n\n  var _props$post2;\n\n  const [updatedPost, setUpdatedPost] = useState(props === null || props === void 0 ? void 0 : (_props$post2 = props.post) === null || _props$post2 === void 0 ? void 0 : _props$post2.body);\n\n  const updateClickListener = post => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        body: updatedPost\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => {\n      props.onUpdate(json.body);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group rounded mt-3 text-primary\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      className: \"form-control rounded \",\n      placeholder: \"type your comment here...\",\n      value: updatedPost,\n      onChange: e => setUpdatedPost(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary\",\n      onClick: () => {\n        updateClickListener(props === null || props === void 0 ? void 0 : props.post);\n      },\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UpdatePost, \"dRZ+iyg8wJ4Tuv3FKcVh0CG34Gc=\");\n\n_c2 = UpdatePost;\n\nconst UserPost = () => {\n  _s3();\n\n  const params = useParams();\n  const [posts, setPosts] = useState([]);\n\n  const findAllPosts = () => fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json()).then(p => {\n    setPosts(p.filter(item => item.userId === parseInt(params.id)));\n  });\n\n  useEffect(findAllPosts, []);\n  const [userDetails, setUserDetails] = useState({\n    'id': 1\n  });\n\n  const findUserById = () => fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`).then(res => res.json()).then(userDetails => setUserDetails(userDetails));\n\n  useEffect(findUserById, []);\n  const [newPost, setNewPost] = useState('');\n\n  const postClickHandler = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: newPost,\n        userId: parseInt(params.id)\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => setPosts([json, ...posts]));\n  };\n\n  const deletePostClickHandler = item => {\n    console.log(item.id);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(_post => {\n      setPosts(posts.filter(i => i.id !== item.id));\n    });\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"User Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search Bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control rounded\",\n            placeholder: \"Search for posts...\",\n            \"aria-label\": \"Search\",\n            \"aria-describedby\": \"search-addon\",\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text border-0\",\n            id: \"search-addon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), posts.filter(val => {\n          if (searchTerm === '') {\n            return val;\n          } else if (val.body.includes(searchTerm)) {\n            return val;\n          }\n        }).map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Posts and Comments \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-award\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control rounded \",\n            placeholder: \"New Post...\",\n            value: newPost,\n            onChange: e => setNewPost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-dark\",\n            onClick: postClickHandler,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fw-bold\",\n                        children: post.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        onClick: () => deletePostClickHandler(post),\n                        className: \"fas fa-times fa-pull-right\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: post.body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(UpdatePost, {\n                      post: post,\n                      onUpdate: body => {\n                        setPosts(posts.map(item => {\n                          if (item.id === post.id) item.body = body;\n                          return item;\n                        }));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Comment, {\n                      post: post,\n                      userInfo: userDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s3(UserPost, \"vwiK7qdT9h7wP2YeQ92KA/4YWKs=\", false, function () {\n  return [useParams];\n});\n\n_c3 = UserPost;\nexport default UserPost;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"UpdatePost\");\n$RefreshReg$(_c3, \"UserPost\");","map":{"version":3,"sources":["/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js"],"names":["useEffect","useState","Link","useParams","Comment","props","userInfo","comments","setComments","findAllCommentsOfThisPost","currPost","fetch","id","then","res","json","c","post","newComment","setNewComment","commentClickHandler","method","body","JSON","stringify","postId","name","email","headers","response","e","target","value","map","comment","UpdatePost","updatedPost","setUpdatedPost","updateClickListener","onUpdate","UserPost","params","posts","setPosts","findAllPosts","p","filter","item","userId","parseInt","userDetails","setUserDetails","findUserById","newPost","setNewPost","postClickHandler","title","deletePostClickHandler","console","log","_post","i","searchTerm","setSearchTerm","val","includes","marginBottom","width"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\nconst Comment = (props) => {\n    const { userInfo } = props\n    const [comments, setComments] = useState([])\n    const findAllCommentsOfThisPost = (currPost) =>\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost?.id}`)\n            .then(res => res.json())\n            .then(c => setComments(c))\n    useEffect(() => findAllCommentsOfThisPost(props?.post), [])\n\n    const [newComment, setNewComment] = useState('')\n    const commentClickHandler = (currPost) => {\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${props?.post?.id}`, {\n            method: 'POST',\n            body: JSON.stringify({\n                postId: props?.post.id,\n                name: userInfo.name,\n                email: userInfo.email,\n                body: newComment,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setComments([json, ...comments])\n            )\n    }\n\n    return (\n        <div className=\"text-primary\">\n            <div className=\"input-group rounded mt-3 text-primary\">\n                <textarea type=\"text\" className=\"form-control rounded \"\n                          placeholder=\"type your comment here...\"\n                          value={newComment}\n                          onChange={(e) => setNewComment(e.target.value)}>\n                </textarea>\n                <button className=\"btn btn-outline-primary\"\n                        onClick={commentClickHandler}>comment\n                </button>\n            </div>\n\n            <ul className=\"list-group\">\n                {\n                    comments.map(comment =>\n                        <li className=\"list-group-item\" key={comment.id}>\n                            <p className=\"fw-bold\">{comment.name} - {comment.email}</p>\n                            {comment.body}\n                        </li>)\n                }\n            </ul>\n\n        </div>\n    )\n}\n\nconst UpdatePost = (props) => {\n\n    const [updatedPost, setUpdatedPost] = useState(props?.post?.body)\n    const updateClickListener = (post) => {\n        fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                body: updatedPost,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => {\n                props.onUpdate(json.body)\n            })\n    }\n\n    return (\n        <div className=\"input-group rounded mt-3 text-primary\">\n            <textarea\n                type=\"text\" className=\"form-control rounded \"\n                placeholder=\"type your comment here...\"\n                value={updatedPost}\n                onChange={(e) => setUpdatedPost(e.target.value)}\n            >\n            </textarea>\n            <button className=\"btn btn-outline-primary\"\n                    onClick={() => {updateClickListener(props?.post)}}>\n                Update\n            </button>\n        </div>)\n}\n\nconst UserPost = () => {\n    const params = useParams()\n    const [posts, setPosts] = useState([])\n    const findAllPosts = () =>\n        fetch(`https://jsonplaceholder.typicode.com/posts`)\n            .then(res => res.json())\n            .then(p => {setPosts(p.filter(item => item.userId === parseInt(params.id)))})\n    useEffect(findAllPosts, [])\n\n    const [userDetails, setUserDetails] = useState({ 'id': 1 })\n    const findUserById = () =>\n        fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`)\n            .then(res => res.json())\n            .then(userDetails => setUserDetails(userDetails))\n    useEffect(findUserById, [])\n\n    const [newPost, setNewPost] = useState('')\n\n    const postClickHandler = () => {\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: JSON.stringify({\n                title: 'foo',\n                body: newPost,\n                userId: parseInt(params.id),\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setPosts([json, ...posts])\n            )\n    }\n\n    const deletePostClickHandler = (item) => {\n        console.log(item.id)\n        fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n            method: 'DELETE',\n        })\n            .then(response => response.json())\n            .then(_post => {\n                setPosts(posts.filter(i => i.id !== item.id))\n            })\n\n    }\n\n    const [searchTerm, setSearchTerm] = useState('')\n\n    return (\n        <>\n            <details className=\"w-100\">\n                <summary>User Posts</summary>\n                <div>\n                    <h1>Search Bar</h1>\n                    {/*expand to show search bar, create comment button and post new comments*/}\n                    <div className=\"input-group rounded\">\n                        <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search for posts...\"\n                               aria-label=\"Search\" aria-describedby=\"search-addon\"\n                               onChange={(e) => setSearchTerm(e.target.value)}/>\n                        <span className=\"input-group-text border-0\" id=\"search-addon\">\n                                    <i className=\"fas fa-search\"></i>\n                                  </span>\n                    </div>\n\n                    {\n                        posts.filter((val) => {\n                            if (searchTerm === '') {\n                                return val\n                            } else if (val.body.includes(searchTerm)) {\n                                return val\n                            }\n                        }).map(p =>\n                            <li>\n                                {p.body}\n                            </li>)\n                    }\n                    <br/>\n\n                    <h1>Posts and Comments <i className=\"fa-regular fa-award\"></i></h1>\n                    <div className=\"input-group rounded mt-3\">\n                                <textarea type=\"text\" className=\"form-control rounded \"\n                                          placeholder=\"New Post...\"\n                                          value={newPost}\n                                          onChange={(e) => setNewPost(e.target.value)}>\n\n                                </textarea>\n\n                        <button className=\"btn btn-outline-dark\"\n                                onClick={postClickHandler}>Post\n                        </button>\n\n                    </div>\n                    <hr/>\n\n                    <div className=\"rounded mt-3\">\n                        <ul className=\"list-group\">\n                            {\n                                posts.map(post =>\n                                    <table style={{ marginBottom: '16px' }} key={post.id}>\n                                        <tbody>\n                                        <tr>\n                                            <td style={{ width: '100%' }}>\n                                                <div>\n                                                    <span className=\"fw-bold\">{post.title}</span>\n                                                    <i onClick={() => deletePostClickHandler(post)}\n                                                       className=\"fas fa-times fa-pull-right\"></i>\n                                                </div>\n                                                <div>\n                                                    {post.body}\n                                                </div>\n\n                                                <UpdatePost post={post} onUpdate={(body) => {\n                                                    setPosts(posts.map(item => {\n                                                        if (item.id === post.id) item.body = body\n                                                        return item\n                                                    }))\n                                                }}/>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <Comment post={post} userInfo={userDetails}/>\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                )\n                            }\n\n                        </ul>\n                    </div>\n                </div>\n            </details>\n\n        </>\n    )\n}\n\nexport default UserPost"]},"metadata":{},"sourceType":"module"}