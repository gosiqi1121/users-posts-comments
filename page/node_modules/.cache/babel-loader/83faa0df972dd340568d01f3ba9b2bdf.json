{"ast":null,"code":"var _jsxFileName = \"/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserPost = () => {\n  _s();\n\n  const params = useParams();\n  const [posts, setPosts] = useState({});\n\n  const findAllPosts = () => fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json()).then(p => setPosts(p));\n\n  useEffect(findAllPosts, []);\n  const postsByThisUser = Object.values(posts).filter(p => p.userId === parseInt(params.id));\n  const [newPost, setNewPost] = useState('');\n\n  const postClickHandler = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: newPost,\n        userId: parseInt(params.id)\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => setPosts([json, ...posts]));\n  };\n\n  const deletePostClickHandler = item => {\n    console.log(item.id);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(_post => {\n      setPosts(posts.filter(i => i.id !== item.id));\n    });\n  };\n\n  const [comments, setComments] = useState([]); // const findAllCommentsOfThisPost = (currPost) =>\n  //     fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost.id}`)\n  //         .then(res => res.json())\n  //         .then(c => setComments(c))\n  // useEffect(findAllCommentsOfThisPost, [])\n\n  const [newComment, setNewComment] = useState('');\n\n  const commentClickHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"User Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control rounded\",\n            placeholder: \"Search\",\n            \"aria-label\": \"Search\",\n            \"aria-describedby\": \"search-addon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text border-0\",\n            id: \"search-addon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group rounded mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control rounded \",\n            placeholder: \"New Post...\",\n            value: newPost,\n            onChange: e => setNewPost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-dark\",\n            onClick: postClickHandler,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: postsByThisUser.map(post => /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fw-bold\",\n                        children: post.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        onClick: () => deletePostClickHandler(post),\n                        className: \"fas fa-times fa-pull-right\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: post.body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group rounded mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                      type: \"text\",\n                      className: \"form-control rounded \",\n                      placeholder: \"type your comment here...\",\n                      value: newComment,\n                      onChange: e => setNewComment(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-primary\",\n                      onClick: commentClickHandler,\n                      children: \"comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserPost, \"gzE3ThlujCwsMVKbFrhTRZOXLTg=\", false, function () {\n  return [useParams];\n});\n\n_c = UserPost;\nexport default UserPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPost\");","map":{"version":3,"sources":["/Users/sunarke/Desktop/pagination/page/src/User/UserPost.js"],"names":["useEffect","useState","useParams","UserPost","params","posts","setPosts","findAllPosts","fetch","then","res","json","p","postsByThisUser","Object","values","filter","userId","parseInt","id","newPost","setNewPost","postClickHandler","method","body","JSON","stringify","title","headers","response","deletePostClickHandler","item","console","log","_post","i","comments","setComments","newComment","setNewComment","commentClickHandler","e","target","value","map","post","marginBottom","width"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst UserPost = () => {\n    const params = useParams()\n    const [posts, setPosts] = useState({})\n    const findAllPosts = () =>\n        fetch(`https://jsonplaceholder.typicode.com/posts`)\n            .then(res => res.json())\n            .then(p => setPosts(p))\n    useEffect(findAllPosts, [])\n    const postsByThisUser = Object.values(posts).filter(p => p.userId === parseInt(params.id))\n\n    const [newPost, setNewPost] = useState('')\n\n    const postClickHandler = () => {\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: JSON.stringify({\n                title: 'foo',\n                body: newPost,\n                userId: parseInt(params.id),\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setPosts([json, ...posts])\n            )\n    }\n\n    const deletePostClickHandler = (item) => {\n        console.log(item.id)\n        fetch(`https://jsonplaceholder.typicode.com/posts/${item.id}`, {\n            method: 'DELETE',\n        })\n            .then(response => response.json())\n            .then(_post => {\n                setPosts(posts.filter(i => i.id !== item.id))\n            })\n\n    }\n    const [comments, setComments] = useState([])\n\n    // const findAllCommentsOfThisPost = (currPost) =>\n    //     fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currPost.id}`)\n    //         .then(res => res.json())\n    //         .then(c => setComments(c))\n    // useEffect(findAllCommentsOfThisPost, [])\n\n    const [newComment, setNewComment] = useState('')\n    const commentClickHandler = () => {\n\n    }\n\n    return (\n        <>\n            <details className=\"w-100\">\n                <summary>User Post</summary>\n                <div>\n                    {/*expand to show search bar, create comment button and post new comments*/}\n                    <div className=\"input-group rounded\">\n                        <input type=\"search\" className=\"form-control rounded\" placeholder=\"Search\"\n                               aria-label=\"Search\" aria-describedby=\"search-addon\"/>\n                        <span className=\"input-group-text border-0\" id=\"search-addon\">\n                                    <i className=\"fas fa-search\"></i>\n                                  </span>\n                    </div>\n\n\n                    <div className=\"input-group rounded mt-3\">\n                                <textarea type=\"text\" className=\"form-control rounded \"\n                                          placeholder=\"New Post...\"\n                                          value={newPost}\n                                          onChange={(e) => setNewPost(e.target.value)}>\n\n                                </textarea>\n\n                        <button className=\"btn btn-outline-dark\"\n                                onClick={postClickHandler}>Post\n                        </button>\n                    </div>\n                    <hr/>\n\n                    <div className=\"rounded mt-3\">\n                        <ul className=\"list-group\">\n                            {\n                                postsByThisUser.map(post =>\n                                        <table style={{ marginBottom: '16px' }}>\n                                            <tbody>\n                                            <tr>\n                                                <td style={{ width: '100%' }}>\n                                                    <div>\n                                                        <span className=\"fw-bold\">{post.title}</span>\n                                                        <i onClick={() => deletePostClickHandler(post)}\n                                                           className=\"fas fa-times fa-pull-right\"></i>\n                                                    </div>\n                                                    <div>{post.body}</div>\n                                                </td>\n                                            </tr>\n\n\n                                            <tr>\n                                                <div className=\"input-group rounded mt-3\">\n                                                    <textarea type=\"text\" className=\"form-control rounded \"\n                                                              placeholder=\"type your comment here...\"\n                                                              value={newComment}\n                                                              onChange={(e) => setNewComment(e.target.value)}>\n\n                                                    </textarea>\n\n                                                    <button className=\"btn btn-outline-primary\"\n                                                            onClick={commentClickHandler}>comment\n                                                    </button>\n                                                </div>\n\n                                                {/*<ul className=\"list-group\">*/}\n                                                {/*    {*/}\n                                                {/*        // <h1>{post}</h1>*/}\n                                                {/*        // findAllCommentsOfThisPost(post).map(comment =>*/}\n                                                {/*        //     <li className=\"list-group-item\">*/}\n                                                {/*        //         {comment.body}*/}\n                                                {/*        //     </li>*/}\n                                                {/*        // )*/}\n                                                {/*    }*/}\n\n\n                                                {/*</ul>*/}\n\n                                            </tr>\n\n                                            </tbody>\n                                        </table>\n                                )\n                            }\n\n                        </ul>\n                    </div>\n\n\n                </div>\n            </details>\n\n        </>\n    )\n}\nexport default UserPost"]},"metadata":{},"sourceType":"module"}